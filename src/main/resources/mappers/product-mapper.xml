<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.semi.mappers.ProductMapper">
    <resultMap id="productResult" type="Product">
        <result column="PRODUCT_NO" property="productNo"/>
        <result column="CLIENT_ID" property="clientId"/>
        <result column="CATEGORY_NO" property="categoryNo"/>
        <result column="PRODUCT_NAME" property="productName"/>
        <result column="COLOR" property="color"/>
        <result column="PRODUCT_SIZE" property="productSize"/>
        <result column="REGISTRATION_DATE" property="registrationDate"/>
        <result column="STOCK_IN_PRICE" property="stockInPrice"/>
        <result column="STOCK_OUT_PRICE" property="stockOutPrice"/>
        <result column="IMAGE_URL" property="imageUrl"/>
        <result column="STATUS" property="status"/>
        <result column="CATEGORY_NAME" property="categoryName"/>
        <result column="TOTAL_AMOUNT" property="totalAmount"/>
    </resultMap>
    <resultMap id="categoryResult" type="Category">
        <result column="CATEGORY_NO" property="categoryNo"/>
        <result column="CATEGORY_NAME" property="categoryName"/>
        <result column="STATUS" property="status"/>
    </resultMap>
    <resultMap id="clientResult" type="Client">
        <result column="CLIENT_ID" property="clientId"/>
        <result column="CLIENT_NAME" property="clientName"/>
        <result column="CLIENT_CEO" property="clientCeo"/>
        <result column="CLIENT_PHONE" property="clientPhone"/>
        <result column="CLIENT_ADDRESS" property="clientAddress"/>
        <result column="STATUS" property="status"/>
    </resultMap>
    <select id="selectProductList" resultType="Product">
        SELECT DISTINCT
        P.PRODUCT_NO AS productNo,
        P.PRODUCT_NAME AS productName,
        P.CATEGORY_NO AS categoryNo,
        C.CATEGORY_NAME AS categoryName,
        P.COLOR AS color,
        P.PRODUCT_SIZE AS productSize,
        P.STOCK_IN_PRICE AS stockInPrice,
        P.STOCK_OUT_PRICE AS stockOutPrice,
        P.STATUS AS status,
        P.IMAGE_URL AS imageUrl
        FROM PRODUCT P
        JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        <if test="clientId == 0">
            JOIN INVENTORY I ON P.PRODUCT_NO = I.PRODUCT_NO
        </if>
        WHERE P.STATUS = 'Y'
        <if test="clientId != 0">
            AND CLIENT_ID = #{clientId}
        </if>
        <if test="clientId == 0">
            AND I.QUANTITY > 0
            AND I.STORE_ID = #{storeId}
        </if>
        ORDER BY P.PRODUCT_NO
    </select>
    <select id="searchProductName" resultType="Product">
        SELECT P.PRODUCT_NO AS productNo,
        P.PRODUCT_NAME AS productName,
        P.CATEGORY_NO AS categoryNo,
        C.CATEGORY_NAME AS categoryName,
        P.COLOR AS color,
        P.PRODUCT_SIZE AS productSize,
        P.STOCK_IN_PRICE AS stockInPrice,
        P.STOCK_OUT_PRICE AS stockOutPrice,
        P.IMAGE_URL AS imageUrl
        FROM PRODUCT P
        JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        WHERE P.PRODUCT_NAME LIKE '%' || #{productName} || '%'
        <if test="clientId != 0">
            AND CLIENT_ID = #{clientId}
        </if>
        ORDER BY P.PRODUCT_NO ASC
    </select>
    <select id="selectImageUrl" resultType="Product" resultMap="productResult">
        SELECT IMAGE_URL,
                PRODUCT_NO
        FROM PRODUCT
    </select>

    <select id="getCategoryList" resultMap="categoryResult">
        SELECT CATEGORY_NO,
            CATEGORY_NAME
        FROM CATEGORY
        ORDER BY CATEGORY_NO ASC
    </select>
    <select id="getClientList" resultMap="clientResult">
        SELECT CLIENT_ID,
                CLIENT_NAME
        FROM CLIENT
        ORDER BY CLIENT_ID ASC
    </select>
    <update id="updateProductPause">
        UPDATE PRODUCT
        SET STATUS = 'P'
        WHERE PRODUCT_NO IN
        <foreach item="productNo" collection="productNoList" open="(" separator="," close=")">
            #{productNo}
        </foreach>
    </update>
    <update id="updateProductDelete">
        UPDATE PRODUCT
        SET STATUS = 'D'
        WHERE PRODUCT_NO IN
        <foreach item="productNo" collection="productNoList" open="(" separator="," close=")">
            #{productNo}
        </foreach>
    </update>
    <update id="updateProductRestart">
        UPDATE PRODUCT
        SET STATUS = 'Y'
        WHERE PRODUCT_NO IN
        <foreach item="productNo" collection="productNoList" open="(" separator="," close=")">
            #{productNo}
        </foreach>
    </update>
    <insert id="enrollProduct" parameterType="Product">
        INSERT INTO PRODUCT (
            PRODUCT_NO,
            CLIENT_ID,
            CATEGORY_NO,
            PRODUCT_NAME,
            COLOR,
            PRODUCT_SIZE,
            REGISTRATION_DATE,
            STOCK_IN_PRICE,
            STOCK_OUT_PRICE,
            IMAGE_URL
        ) VALUES (
            PRODUCT_SEQ.NEXTVAL,
            #{clientId},
            #{categoryNo},
            #{productName},
            #{color},
            #{productSize},
            SYSDATE,
            #{stockInPrice},
            #{stockOutPrice},
            #{imageUrl}
        )
    </insert>
    <update id="updateProduct">
        UPDATE PRODUCT
            SET PRODUCT_NAME = #{productName},
                CATEGORY_NO = #{categoryNo},
                COLOR = #{color},
                PRODUCT_SIZE = #{productSize},
                STOCK_IN_PRICE = #{stockInPrice},
                STOCK_OUT_PRICE = #{stockOutPrice}
        WHERE PRODUCT_NO = #{productNo}
    </update>
    <select id="searchProduct" parameterType="map" resultMap="productResult">
        SELECT P.PRODUCT_NO,
                P.PRODUCT_NAME,
                P.CATEGORY_NO,
                C.CATEGORY_NAME,
                P.COLOR,
                P.PRODUCT_SIZE,
                P.STOCK_IN_PRICE,
                P.STOCK_OUT_PRICE,
                P.STATUS
                FROM PRODUCT P
        JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        <where>
            <!-- status가 null이 아니면 필터링 -->
            <if test="status != null and status != ''">
                AND P.STATUS = #{status}
            </if>

            <!-- categoryNo가 null이 아니면 필터링 -->
            <if test="categoryNo != null">
                AND P.CATEGORY_NO = #{categoryNo}
            </if>

            <!-- searchedKeyword가 null이 아니면 필터링 -->
            <if test="keyword != null and keyword != ''">
                AND LOWER(P.PRODUCT_NAME) LIKE '%' || #{keyword} || '%'
            </if>
        </where>
        ORDER BY P.PRODUCT_NO DESC
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </select>

    <select id="countProduct" resultType="int">
        SELECT COUNT(*)
        FROM PRODUCT P
        JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        <where>
            <!-- status가 null이 아니면 필터링 -->
            <if test="status != null and status != ''">
                AND P.STATUS = #{status}
            </if>

            <!-- categoryNo가 null이 아니면 필터링 -->
            <if test="categoryNo != null">
                AND P.CATEGORY_NO = #{categoryNo}
            </if>

            <!-- searchedKeyword가 null이 아니면 필터링 -->
            <if test="keyword != null and keyword != ''">
                AND LOWER(P.PRODUCT_NAME) LIKE '%' || #{keyword} || '%'
            </if>
        </where>
    </select>

    <select id="selectClientList" resultMap="clientResult">
        SELECT CLIENT_ID,
        CLIENT_NAME,
        CLIENT_CEO,
        CLIENT_PHONE,
        CLIENT_ADDRESS
        FROM CLIENT
        WHERE STATUS = 'Y'
        ORDER BY CLIENT_ID
    </select>

    <insert id="insertClient" parameterType="Client">
        INSERT INTO CLIENT (
        CLIENT_ID,
        CLIENT_NAME,
        CLIENT_CEO,
        CLIENT_PHONE,
        CLIENT_ADDRESS
        )
        VALUES (
        CLIENT_SEQ.NEXTVAL,
        #{clientName},
        #{clientCeo},
        #{clientPhone},
        #{clientAddress}
        )
    </insert>

    <update id="updateClient">
        UPDATE CLIENT
        SET CLIENT_NAME = #{clientName},
            CLIENT_CEO = #{clientCeo},
            CLIENT_PHONE = #{clientPhone},
            CLIENT_ADDRESS = #{clientAddress}
        WHERE CLIENT_ID = #{clientId}
    </update>

    <update id="deleteClient">
        UPDATE CLIENT
        SET STATUS = 'N'
        WHERE CLIENT_ID = #{clientId}
    </update>

    <select id="selectdeliveryListByPage" resultMap="clientResult">
        SELECT CLIENT_ID,
        CLIENT_NAME,
        CLIENT_CEO,
        CLIENT_PHONE,
        CLIENT_ADDRESS,
        STATUS
        FROM CLIENT
        WHERE STATUS = 'Y'
        ORDER BY CLIENT_ID ASC
    </select>

    <select id="deliveryCount" resultType="int">
        SELECT COUNT(*) FROM
        CLIENT
        WHERE STATUS = 'Y'
    </select>
    <select id="top4product" parameterType="int" resultMap="productResult">
        SELECT
        P.PRODUCT_NO,
        P.PRODUCT_NAME,
        P.IMAGE_URL,
        SUM(SP.AMOUNT) AS totalAmount
        FROM PRODUCT P
        JOIN STOCK_PRODUCT SP ON SP.PRODUCT_NO = P.PRODUCT_NO
        JOIN STOCK S ON S.STOCK_NO = SP.STOCK_NO
        JOIN MEMBER M ON S.STOCK_EMP = M.EMP_NO
        WHERE S.STOCK_DATE BETWEEN TRUNC(SYSDATE) - 7 AND TRUNC(SYSDATE)
        AND S.STOCK_STATUS = 'STOCK_OUT_COMPLETED'
        AND M.STORE_ID = #{storeId}
        GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.IMAGE_URL
        ORDER BY totalAmount DESC
        FETCH FIRST 4 ROWS ONLY
    </select>
    <select id="top4productAdmin" parameterType="int" resultMap="productResult">
        SELECT
        P.PRODUCT_NO,
        P.PRODUCT_NAME,
        P.IMAGE_URL,
        SUM(SP.AMOUNT) AS totalAmount
        FROM PRODUCT P
        JOIN STOCK_PRODUCT SP ON SP.PRODUCT_NO = P.PRODUCT_NO
        JOIN STOCK S ON S.STOCK_NO = SP.STOCK_NO
        JOIN MEMBER M ON S.STOCK_EMP = M.EMP_NO
        WHERE S.STOCK_DATE BETWEEN TRUNC(SYSDATE) - 7 AND TRUNC(SYSDATE)
        AND S.STOCK_STATUS = 'STOCK_OUT_COMPLETED'
        GROUP BY P.PRODUCT_NO, P.PRODUCT_NAME, P.IMAGE_URL
        ORDER BY totalAmount DESC
        FETCH FIRST 4 ROWS ONLY
    </select>
    <select id="getProductSales" parameterType="int" resultMap="productResult">
        SELECT P.PRODUCT_NAME,
                SUM(SP.AMOUNT) AS TOTAL_AMOUNT
        FROM STOCK_PRODUCT SP
        JOIN STOCK S ON SP.STOCK_NO = S.STOCK_NO
        JOIN MEMBER M ON M.EMP_NO = S.STOCK_EMP
        JOIN PRODUCT P ON SP.PRODUCT_NO = P.PRODUCT_NO
        WHERE M.STORE_ID = #{storeId}
            AND (S.STATUS = 'Y' OR S.STATUS = 'C')
            AND S.STOCK_STATUS = 'STOCK_OUT_COMPLETED'
        GROUP BY P.PRODUCT_NAME
        ORDER BY TOTAL_AMOUNT DESC
        FETCH FIRST 5 ROWS ONLY
    </select>
</mapper>