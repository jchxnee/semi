<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.semi.mappers.InventoryMapper">
    <resultMap id="inventoryResult" type="Inventory">
        <result column="STORE_ID" property="storeId"/>
        <result column="STORAGE_NO" property="storageNo"/>
        <result column="PRODUCT_NO" property="productNo"/>
        <result column="QUANTITY" property="quantity"/>
        <result column="STOCK_IN_DATE" property="stockInDate"/>
        <result column="STOCK_OUT_DATE" property="stockOutDate"/>
        <result column="STORAGE_LOCATION" property="storageLocation"/>
        <result column="PRODUCT_NAME" property="productName"/>
        <result column="CATEGORY_NAME" property="categoryName"/>
        <result column="COLOR" property="color"/>
        <result column="PRODUCT_SIZE" property="productSize"/>
    </resultMap>
    <resultMap id="stockProductResult" type="StockProduct">
        <result column="STOCK_NO" property="stockNo"/>
        <result column="PRODUCT_NO" property="productNo"/>
        <result column="STORAGE_NO" property="storageNo"/>
        <result column="AMOUNT" property="amount"/>
        <result column="PRICE" property="price"/>
        <result column="TAXPRICE" property="taxPrice"/>
        <result column="TAX" property="tax"/>
        <result column="STOCK_STATUS" property="stockStatus"/>
        <result column="PRODUCT_NAME" property="productName"/>
        <result column="COLOR" property="color"/>
        <result column="PRODUCT_SIZE" property="productSize"/>
        <result column="STOCK_DATE" property="stockDate"/>
    </resultMap>
    <select id="searchInventoryList" parameterType="map" resultMap="inventoryResult">
        SELECT
            S.STORAGE_LOCATION,
            P.PRODUCT_NO,
            P.PRODUCT_NAME,
            C.CATEGORY_NAME,
            P.COLOR,
            P.PRODUCT_SIZE,
            I.QUANTITY
        FROM INVENTORY I
        JOIN STORAGE S ON I.STORAGE_NO = S.STORAGE_NO
        JOIN PRODUCT P ON I.PRODUCT_NO = P.PRODUCT_NO
        JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        WHERE I.STORE_ID = #{storeId}
            <if test="storageNo != null">
                AND I.STORAGE_NO = #{storageNo}
            </if>
            <if test="keyword != null and keyword !=''">
                AND LOWER(P.PRODUCT_NAME) LIKE '%' || #{keyword} || '%'
            </if>
        ORDER BY P.PRODUCT_NO ASC
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </select>
    <select id="countInventoryList" resultType="int">
        SELECT COUNT(*)
        FROM INVENTORY I
        JOIN STORAGE S ON I.STORAGE_NO = S.STORAGE_NO
        JOIN PRODUCT P ON I.PRODUCT_NO = P.PRODUCT_NO
        JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
        WHERE I.STORE_ID = #{storeId}
            <if test="storageNo != null">
                AND I.STORAGE_NO = #{storageNo}
            </if>
            <if test="keyword != null and keyword !=''">
                AND LOWER(P.PRODUCT_NAME) LIKE '%' || #{keyword} || '%'
            </if>
    </select>
    <select id="searchStockProductList" parameterType="map" resultMap="stockProductResult">
        SELECT
        S.STOCK_STATUS,
        SP.PRODUCT_NO,
        P.PRODUCT_NAME,
        P.COLOR,
        P.PRODUCT_SIZE,
        SP.STOCK_NO,
        S.STOCK_DATE,
        SP.AMOUNT
        FROM STOCK_PRODUCT SP
        JOIN PRODUCT P ON P.PRODUCT_NO = SP.PRODUCT_NO
        JOIN STOCK S ON S.STOCK_NO = SP.STOCK_NO
        JOIN MEMBER M ON S.STOCK_EMP = M.EMP_NO
        WHERE S.STOCK_STATUS IN ('STOCK_IN_COMPLETED', 'STOCK_OUT_COMPLETED')
            AND M.STORE_ID = #{storeId}
        <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            AND S.STOCK_DATE BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD')
            AND TO_DATE(#{endDate} || ' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        </if>
        <if test="keyword != null and keyword != ''">
            AND P.PRODUCT_NAME LIKE '%' || #{keyword} || '%'
        </if>
        ORDER BY S.STOCK_DATE DESC
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </select>
    <select id="countStockProductList" resultType="int">
        SELECT COUNT(*)
        FROM STOCK_PRODUCT SP
        JOIN PRODUCT P ON P.PRODUCT_NO = SP.PRODUCT_NO
        JOIN STOCK S ON S.STOCK_NO = SP.STOCK_NO
        JOIN MEMBER M ON S.STOCK_EMP = M.EMP_NO
        WHERE S.STOCK_STATUS IN ('STOCK_IN_COMPLETED', 'STOCK_OUT_COMPLETED')
            AND M.STORE_ID = #{storeId}
            <if test="startDate != null and startDate != ''">
                AND S.STOCK_DATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
            </if>
            <if test="endDate != null and endDate != ''">
                AND S.STOCK_DATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
            </if>
            <if test="keyword != null and keyword != ''">
                AND P.PRODUCT_NAME LIKE '%' || #{keyword} || '%'
            </if>
    </select>
    <select id="selectLowInventoryTop4" parameterType="int" resultMap="inventoryResult">
        SELECT
        P.PRODUCT_NAME,
        P.PRODUCT_SIZE,
        I.QUANTITY,
        P.COLOR
        FROM INVENTORY I
        JOIN PRODUCT P ON P.PRODUCT_NO = I.PRODUCT_NO
        WHERE I.STORE_ID = #{storeId}
        ORDER BY I.QUANTITY ASC
        FETCH FIRST 3 ROWS ONLY
    </select>
    <select id="selectInventory" resultMap="inventoryResult" parameterType="Inventory">
        SELECT *
        FROM INVENTORY
        WHERE STORAGE_NO = #{storageNo}
        AND   PRODUCT_NO = #{productNo}
        AND STORE_ID = #{storeId}
    </select>
    <update id="updateInventoryQuantity">
        UPDATE INVENTORY
        SET QUANTITY = QUANTITY + #{quantity}
        WHERE STORAGE_NO = #{storageNo}
        AND   PRODUCT_NO = #{productNo}
        AND STORE_ID = #{storeId}
    </update>
    <update id="minusInventoryQuantity">
        UPDATE INVENTORY
        SET QUANTITY = QUANTITY - #{quantity}
        WHERE STORAGE_NO = #{storageNo}
        AND   PRODUCT_NO = #{productNo}
    </update>

    <insert id="insertInventory" parameterType="Inventory">
        INSERT INTO INVENTORY (
        STORE_ID,
        STORAGE_NO,
        PRODUCT_NO,
        QUANTITY,
        STOCK_IN_DATE
        )
        VALUES (
        #{storeId},
        #{storageNo},
        #{productNo},
        #{quantity},
        SYSDATE
        )
    </insert>
</mapper>